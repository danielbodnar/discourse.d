
From: Daniel Bodnar <daniel.bodnar@fmr.com>
Date: Tue, 17 Dec 2024 01:42:00 -0600
Subject: [PATCH 0003/0008] Add Discourse paths and volume management
Description: Adjusts paths to match upstream defaults and implements volume
management for persistent data and configurations.

diff --git a/lib/00-config.sh b/lib/00-config.sh
--- a/lib/00-config.sh
+++ b/lib/00-config.sh
@@ -29,3 +29,27 @@ DISCOURSE_GID="999"
 MAX_MEMORY="3G"
 MAX_CPU_WEIGHT="100"
 MAX_TASKS="4096"
+
+# Discourse Paths
+DISCOURSE_HOME="/home/discourse"
+DISCOURSE_ROOT="/var/www/discourse"
+DISCOURSE_DATA="/var/discourse"
+
+# Volume Configuration
+DISCOURSE_VOLUMES=(
    "shared:/var/discourse/shared"
    "uploads:/var/discourse/uploads"
    "backups:/var/discourse/backups"
    "assets:/var/discourse/public/assets"
    "plugins:/var/discourse/plugins"
    "configs:/var/discourse/config"
)

+# Persistent directories that need specific permissions
+DISCOURSE_PERSISTENT_DIRS=(
    "${DISCOURSE_DATA}/shared"
    "${DISCOURSE_DATA}/uploads"
    "${DISCOURSE_DATA}/backups"
    "${DISCOURSE_DATA}/public/assets"
    "${DISCOURSE_DATA}/plugins"
    "${DISCOURSE_DATA}/config"
)

diff --git a/lib/02-structure.sh b/lib/02-structure.sh
--- a/lib/02-structure.sh
+++ b/lib/02-structure.sh
@@ -12,8 +12,8 @@ create_directory_structure() {
     # Create base filesystem structure
     mkdir -p "${BASE_DIR}/rootfs/base"/{etc,usr,var}
     mkdir -p "${BASE_DIR}/rootfs/base/usr"/{bin,lib,share}
-    mkdir -p "${BASE_DIR}/rootfs/base/etc"/{discourse,systemd,nginx}
-    mkdir -p "${BASE_DIR}/rootfs/base/var"/{lib,log,run}/discourse
+    mkdir -p "${BASE_DIR}/rootfs/base/etc"/{systemd,nginx}
+    mkdir -p "${BASE_DIR}/rootfs/base/var"/{log,run}/discourse

     # Create Discourse specific directories
     mkdir -p "${BASE_DIR}/rootfs/base${DISCOURSE_ROOT}"
     mkdir -p "${BASE_DIR}/rootfs/base${DISCOURSE_HOME}"
     mkdir -p "${BASE_DIR}/rootfs/base${DISCOURSE_DATA}"

     # Create volume mount points
     for volume in "${DISCOURSE_VOLUMES[@]}"; do
         IFS=':' read -r name path <<< "$volume"
         mkdir -p "${BASE_DIR}/rootfs/base${path}"
     done

     # Set permissions
     chown -R root:root "${BASE_DIR}/rootfs"
     chmod 755 "${BASE_DIR}/rootfs"

     # Set up Discourse directories
     chown -R "${DISCOURSE_UID}:${DISCOURSE_GID}" "${BASE_DIR}/rootfs/base${DISCOURSE_HOME}"
     chown -R "${DISCOURSE_UID}:${DISCOURSE_GID}" "${BASE_DIR}/rootfs/base${DISCOURSE_ROOT}"

     # Set up volume directories
     for dir in "${DISCOURSE_PERSISTENT_DIRS[@]}"; do
         chown "${DISCOURSE_UID}:${DISCOURSE_GID}" "${BASE_DIR}/rootfs/base${dir}"
         chmod 755 "${BASE_DIR}/rootfs/base${dir}"
     done
}

# Configure volume management
setup_volume_links() {
    ln -sf "${DISCOURSE_DATA}/config/discourse.conf" "${BASE_DIR}/rootfs/base${DISCOURSE_ROOT}/config/discourse.conf"
    ln -sf "${DISCOURSE_DATA}/public/assets" "${BASE_DIR}/rootfs/base${DISCOURSE_ROOT}/public/assets"
    ln -sf "${DISCOURSE_DATA}/uploads" "${BASE_DIR}/rootfs/base${DISCOURSE_ROOT}/public/uploads"
    ln -sf "${DISCOURSE_DATA}/plugins" "${BASE_DIR}/rootfs/base${DISCOURSE_ROOT}/plugins"
}

# Generate systemd mount units
generate_volume_systemd_mount_units() {
    for volume in "${DISCOURSE_VOLUMES[@]}"; do
        IFS=':' read -r name path <<< "$volume"
        cat > "${BASE_DIR}/rootfs/base/etc/systemd/system/discourse-${name}.mount" << EOF
[Unit]
Description=Discourse ${name} Volume
Before=discourse.service

[Mount]
What=/var/discourse/${name}
Where=${path}
Type=none
Options=bind

[Install]
WantedBy=discourse.service
EOF
    done
}

generate_volume_tmpfiles() {
    cat > "${BASE_DIR}/rootfs/base/usr/lib/tmpfiles.d/discourse.conf" << EOF
# Discourse persistent directories
d ${DISCOURSE_DATA} 0755 ${DISCOURSE_USER} ${DISCOURSE_GROUP} -
$(for dir in "${DISCOURSE_PERSISTENT_DIRS[@]}"; do
    echo "d ${dir} 0755 ${DISCOURSE_USER} ${DISCOURSE_GROUP} -"
done)
EOF
}

diff --git a/convert.sh b/convert.sh
--- a/convert.sh
+++ b/convert.sh
@@ -14,6 +14,9 @@ main() {
     validate_environment
     create_directory_structure
+    setup_volume_links
+    generate_volume_systemd_mount_units
+    generate_volume_tmpfiles
     success "Initial setup completed successfully!"
 }
